// Poisson disk sampling
static const uint SAMPLE_NUM = 64;
static const float2 POISSON_SAMPLES[SAMPLE_NUM] =
{
float2(0.0f, 0.0f),
float2(0.7538788758883486f, 0.6477439658627253f),
float2(0.832681181808945f, -0.552035075345409f),
float2(-0.31045817383505786f, -0.9492358843619491f),
float2(-0.5303650700632866f, 0.8095092456851719f),
float2(-0.961202742302709f, -0.2705815241173273f),
float2(0.14377125079512126f, 0.9234559511215592f),
float2(0.9612456119215159f, 0.07133154864916862f),
float2(0.22883158117359073f, -0.6617121842731806f),
float2(-0.5530512095402477f, 0.08490393471714669f),
float2(-0.28384296737342163f, -0.4211916911017622f),
float2(0.49048569394579616f, 0.198983208802658f),
float2(-0.8693304930963798f, 0.4437299687409925f),
float2(-0.15788587474042998f, 0.4699937910818144f),
float2(0.49219360545501034f, -0.27737953935761944f),
float2(0.36720018836953444f, 0.5859265610913749f),
float2(-0.682695063459795f, -0.6499600472992848f),
float2(-0.988647136797821f, 0.11936555316344112f),
float2(-0.6363324069229851f, -0.31808172409496843f),
float2(0.49906778970763566f, -0.8604462984603002f),
float2(0.044932723002909465f, -0.3283212717790389f),
float2(0.14603369236514416f, -0.984997767534502f),
float2(-0.5455757132399914f, 0.44806323972128737f),
float2(0.8463323321565182f, -0.2377670962217691f),
float2(-0.2300254961534921f, 0.8008252328817891f),
float2(0.1846897183889747f, 0.2980333546809202f),
float2(-0.08439841061612442f, -0.7638682262247809f),
float2(0.32647079575686233f, -0.04254135612993857f),
float2(0.8119709508555534f, 0.3440182674038375f),
float2(-0.3069800283456081f, -0.061612736679496405f),
float2(0.7035183869832448f, 0.04972684242134541f),
float2(0.5482200274150245f, -0.5732483837130783f),
float2(-0.7734138167691349f, -0.03522407216795672f),
float2(0.4496931947960341f, 0.8922470076935328f),
float2(0.031044890840132136f, 0.6719831746942531f),
float2(-0.27220952329136505f, 0.20245603066392584f),
float2(0.5886528206290164f, 0.4558207052006647f),
float2(-0.5304868423538247f, -0.8398660243494737f),
float2(-0.46675909483713424f, -0.5688154347815219f),
float2(0.257250327485927f, -0.3981904463647826f),
float2(-0.7913502684065921f, 0.23033627523670933f),
float2(-0.4440886567418212f, -0.2241688637399796f),
float2(0.07926696626041117f, -0.5295520736891081f),
float2(-0.6818023863286539f, 0.6179702630013714f),
float2(-0.8389450255923998f, -0.4844540868739606f),
float2(-0.0599543092517869f, -0.985826861423464f),
float2(-0.3337399724523007f, -0.7073795179722379f),
float2(0.6886167077376371f, -0.37306401219401747f),
float2(0.6764161558126373f, -0.14228219651221952f),
float2(-0.10843263563818901f, -0.19461134157202095f),
float2(-0.07937087841118941f, 0.9918604376481905f),
float2(-0.4003331279765197f, 0.6115436337495543f),
float2(0.3097492894516191f, -0.8424640970569722f),
float2(0.28042428672261077f, 0.7774257328768467f),
float2(-0.01853231230809195f, 0.2839240365543654f),
float2(0.08308784385856843f, 0.49039231551829726f),
float2(0.526585119312142f, 0.7173021984508077f),
float2(0.15427255950896016f, -0.1197814491131632f),
float2(0.6735664112633329f, -0.7199203281599008f),
float2(0.19128001894551108f, 0.08824842136755572f),
float2(-0.39077336986327643f, 0.34023648299473297f),
float2(-0.6176421293060034f, 0.24829039089521174f),
float2(-0.09759531955189689f, -0.5426716127414456f),
float2(0.505729341365671f, 0.016753021418267407f),
};
