#pragma once
#include "Falcor.h"
using namespace Falcor;

std::vector<float2> POISSON_SAMPLES_4 =
{
float2(0.2278153434964225f, -0.9287684198303515f),
float2(-0.23707585929017114f, 0.9258977347554506f),
float2(-0.8672200191424517f, -0.2702242291516664f),
float2(0.876086756549387f, 0.1709185909706793f),
};

std::vector<float2> POISSON_SAMPLES_8 =
{
float2(-0.22854011588785383f, 0.04637887538097858f),
float2(0.8295872850086923f, 0.5345830818314967f),
float2(0.5491739884287686f, -0.8240832187474425f),
float2(0.028878007151233183f, 0.8806763235077204f),
float2(-0.6295805929640687f, -0.754052442673921f),
float2(-0.7258809348018078f, 0.6254207795372089f),
float2(0.54799357962228f, -0.14204615897694445f),
float2(-0.921586513764759f, -0.10234981024413647f),
};

std::vector<float2> POISSON_SAMPLES_16 =
{
float2(0.1631679514681974f, -0.4757224811346409f),
float2(-0.356871808756105f, 0.9153311656223183f),
float2(0.7372181045729123f, 0.5158528149048679f),
float2(-0.9312636252385229f, -0.09842614978179128f),
float2(0.03747641747369037f, 0.28096148207330923f),
float2(0.9603969874126438f, -0.1995422975689046f),
float2(-0.5838940821041708f, -0.8017809897687519f),
float2(0.2508124879569692f, 0.9212446758426762f),
float2(-0.8182707084939863f, 0.48064858561632295f),
float2(-0.4030609586786002f, 0.016964979499172476f),
float2(0.5027937523518995f, 0.0527079663919039f),
float2(-0.033487396353909654f, -0.9513214036923098f),
float2(0.6017575720438811f, -0.7779442345054054f),
float2(-0.41080918845848496f, -0.42306210546672807f),
float2(0.04545787165127011f, -0.10924819804028339f),
float2(-0.35745310877382347f, 0.4657874619996409f),
};

std::vector<float2> POISSON_SAMPLES_32 =
{
float2(-0.6936138940633497f, -0.034394404374318385f),
float2(0.9992408601387256f, 0.012894662670800978f),
float2(0.09041712966301788f, 0.9169314477450732f),
float2(0.10001660844238942f, -0.9620491186364383f),
float2(0.1152482212150169f, 0.007091654181215293f),
float2(-0.6126973553473811f, -0.7901410909003728f),
float2(-0.5508290599063426f, 0.6893074777324334f),
float2(0.7310965630727352f, -0.6593386194696955f),
float2(0.6979708906160728f, 0.6439967727339436f),
float2(-0.16462197475318274f, -0.47979429784629296f),
float2(0.27274596949984103f, 0.440357161481911f),
float2(-0.34687240929235186f, 0.25637616405878744f),
float2(0.5573374668710397f, -0.1544992271753478f),
float2(-0.9543812341941371f, 0.28797866355516216f),
float2(-0.8885933026860984f, -0.412581517286318f),
float2(0.6274540040337568f, 0.24800778499547546f),
float2(0.27381389959996855f, -0.5469289083473318f),
float2(-0.2741055489630274f, -0.8958262685968054f),
float2(-0.08088136968529112f, 0.5557102359465202f),
float2(-0.29283926874906624f, 0.9288693839613982f),
float2(0.9052765716676969f, -0.3440775436640618f),
float2(-0.3282571191402669f, -0.12984730545579315f),
float2(-0.9941502117783633f, -0.021213743498407336f),
float2(-0.5591021412251806f, -0.3431759833842876f),
float2(0.39208576673583f, 0.8406119505843734f),
float2(-0.6346646412859853f, 0.34422965063054495f),
float2(0.42560240197742727f, -0.8805824691836748f),
float2(0.15632659653312586f, -0.2747706401892012f),
float2(-0.04021927853140888f, 0.25393674016397466f),
float2(-0.4288447222029926f, -0.5880858584070432f),
float2(0.04342657677051205f, -0.6912709686887836f),
float2(0.9092387528405266f, 0.3494898211016245f),
};

std::vector<float2> POISSON_SAMPLES_64 =
{
float2(-0.6285986155177089f, -0.34608271371744287f),
float2(0.593889608857404f, 0.7823987115354688f),
float2(0.6781066582275102f, -0.5344685050513734f),
float2(-0.5794569826530235f, 0.7378685162442625f),
float2(-0.08981099695001482f, -0.9749713088647833f),
float2(0.10932501255237627f, 0.22603490531885523f),
float2(0.8829456424712984f, 0.217616568350773f),
float2(-0.9577997605157328f, 0.16325301115103208f),
float2(-0.011959636165959808f, -0.412165062393197f),
float2(0.05200626590102397f, 0.9943405790978075f),
float2(-0.43259825033177246f, 0.1667859146549114f),
float2(0.4399034158325973f, -0.07278173529163592f),
float2(-0.16455755082257947f, 0.4998637612699822f),
float2(-0.4220845060010434f, -0.7633878050189941f),
float2(0.4417983251198282f, -0.8370641968692188f),
float2(-0.2795371024740329f, -0.16141662464142278f),
float2(0.37742364270878076f, 0.47362282356396074f),
float2(-0.8193261350569822f, 0.48255209941127236f),
float2(0.8846715121576363f, -0.26062828010082567f),
float2(0.3259841195761814f, -0.5006194082808657f),
float2(-0.27235565094963554f, 0.7895299709182138f),
float2(-0.9462445491058591f, -0.32290776311071023f),
float2(0.06999137059695393f, -0.06575347653642177f),
float2(0.7088706195473389f, 0.4953373864390596f),
float2(0.2875304670287799f, 0.7696949637006523f),
float2(0.06639493274833579f, -0.7009083340518311f),
float2(-0.33512994020592013f, -0.46635494333954386f),
float2(-0.705483457964765f, -0.6183928756689426f),
float2(0.4037827792566109f, 0.19402777107665095f),
float2(-0.6910710800825615f, -0.0035479937587052186f),
float2(0.7435732287700649f, -0.020223030100382712f),
float2(0.0032714840201500273f, 0.7174876174948025f),
float2(-0.3893461539331683f, 0.5842699018875489f),
float2(-0.15383471605267038f, 0.16905877996373037f),
float2(0.18979732063190652f, -0.9627960465493608f),
float2(-0.9343548996704014f, -0.07944384896556965f),
float2(-0.5742953349755556f, 0.40865273402852575f),
float2(0.2758821706899023f, -0.26065402824924055f),
float2(0.5219430341886312f, -0.29383152752655173f),
float2(0.14328758424414095f, 0.4684283711130092f),
float2(0.6240064732299585f, 0.30957774501880936f),
float2(0.9675731813752049f, 0.008093297862462445f),
float2(-0.49946702030576345f, -0.10744851012052895f),
float2(-0.13364419636910166f, -0.6773268455925266f),
float2(-0.315975246970609f, 0.3535343746145924f),
float2(0.6718543259335513f, -0.7386457411161949f),
float2(-0.17364777018572386f, 0.976522926763151f),
float2(0.48887127745171577f, -0.6352237974127358f),
float2(-0.649096404119403f, 0.21713397518919014f),
float2(-0.3102710995583457f, 0.02726020970064823f),
float2(-0.5287138640674516f, -0.4997953455689258f),
float2(-0.08858933131890215f, -0.21737807334715856f),
float2(-0.7915010880564658f, -0.2075290891148176f),
float2(-0.11528078869960912f, -0.02857058717166596f),
float2(-0.22507852437149087f, -0.8520157922273126f),
float2(0.21827005196926424f, 0.050359658708823085f),
float2(0.5325111240787644f, 0.5694501637324584f),
float2(-0.4468337789155461f, -0.3081265711186229f),
float2(0.606572402503415f, -0.13662948461582844f),
float2(0.1644208991325661f, -0.4107906759854648f),
float2(-0.7924871102179136f, -0.4274721279945712f),
float2(-0.05614026609271081f, 0.3319269508043915f),
float2(0.3068824112074083f, -0.7136377666911587f),
float2(0.2658169668826127f, 0.9577877257050208f),
};


std::vector<float2> POISSON_SAMPLES_128 =
{
float2(-0.5660581677150608f, 0.4393545332061663f),
float2(0.9858585042796415f, -0.044296646739533f),
float2(-0.17824870239543647f, -0.955356000155132f),
float2(0.47187182783243603f, 0.7257899176526356f),
float2(-0.9014643986515005f, -0.4091592200771323f),
float2(0.13930760166769263f, -0.08014949739986113f),
float2(0.5522545453746412f, -0.6745763405880515f),
float2(-0.16539591809464713f, 0.9703295397173574f),
float2(-0.37639614805131577f, -0.26050114546968184f),
float2(-0.03598254913345516f, 0.46327307604575246f),
float2(-0.9120779149180822f, 0.1681331675265735f),
float2(0.005820213984955274f, -0.5215046404947243f),
float2(0.4792316195473809f, 0.2601718271640181f),
float2(0.5773464278177362f, -0.21244430465185338f),
float2(-0.5600853522210045f, -0.7573181919024085f),
float2(-0.5614944693662863f, 0.8269432427492024f),
float2(0.8617758483045065f, 0.47967162649813655f),
float2(-0.2229516337675486f, 0.07498082111737162f),
float2(0.2049453541468432f, -0.8249141678340925f),
float2(-0.5854141685504726f, 0.09891373382611826f),
float2(-0.2848159598366955f, -0.6034412941403268f),
float2(0.8840543790301325f, -0.4576941391311945f),
float2(0.17962118642181757f, 0.2226616482295742f),
float2(0.7449389511760038f, 0.13993016639101305f),
float2(0.13273116336268054f, 0.857279015312997f),
float2(-0.305411539758766f, 0.6549151978800257f),
float2(-0.7621620720779391f, -0.11573007035989939f),
float2(0.3563111302702838f, -0.41410278571542664f),
float2(-0.2705553371084349f, 0.3446890140724653f),
float2(-0.8532908359249288f, 0.4505545043106664f),
float2(0.22566897853953546f, 0.5073146877158282f),
float2(-0.6019548369953063f, -0.3897315916945293f),
float2(-0.051554268341885826f, -0.20547099335440883f),
float2(-0.7401654831834875f, -0.5841642030256256f),
float2(0.7196710565507592f, 0.6591861236161917f),
float2(0.43906334755877535f, -0.8816897892516748f),
float2(0.3908234808761057f, 0.0080402770687607f),
float2(-0.03336062196766904f, -0.7903836338401771f),
float2(0.7713712391013472f, -0.1053236058219677f),
float2(0.9657306994586154f, 0.22113666630614215f),
float2(-0.0465352876974816f, 0.21072206486082692f),
float2(0.6266844517213559f, -0.44951882686279f),
float2(-0.08430616853115305f, 0.7359989802002266f),
float2(-0.18511826237939358f, -0.38137370920432506f),
float2(-0.7343229150479725f, 0.6288091828584254f),
float2(0.5338388210112545f, 0.5245063412482467f),
float2(0.760689570231311f, -0.6483392612996332f),
float2(-0.9819347930463775f, -0.04709242071872895f),
float2(0.9363884508365005f, -0.2520279965595645f),
float2(0.24094073028414856f, -0.5943635944294393f),
float2(-0.3366222503491535f, -0.8035294989180282f),
float2(0.265192436045404f, -0.2433956253727577f),
float2(-0.5082578821379902f, -0.10194269326197161f),
float2(0.697422198357418f, 0.3587777373326515f),
float2(-0.3412354092612426f, 0.8895230600863595f),
float2(-0.7496278373479074f, 0.2924135121031984f),
float2(0.3206847220165613f, 0.9391087133248187f),
float2(0.0205346277029801f, -0.9913020529107534f),
float2(-0.3900619531593973f, 0.19843931324324796f),
float2(0.5964435598617395f, -0.007679491555394119f),
float2(-0.4990932263474275f, 0.6214200220736746f),
float2(0.1028663955079445f, -0.35512373787207147f),
float2(-0.5059214966947259f, -0.5643264901076593f),
float2(0.20813908083825106f, 0.6942036363473124f),
float2(-0.03794606626925015f, -0.016442562366638477f),
float2(-0.29876785079690016f, -0.081509443222454f),
float2(0.04584894241105922f, 0.6364188525301449f),
float2(-0.3803354097727338f, 0.47775239740678654f),
float2(0.3903847295753042f, -0.6489125392990808f),
float2(-0.3808930688552037f, -0.42623470346524367f),
float2(0.3691319148219763f, 0.4124708906208943f),
float2(-0.7507215599172729f, -0.3003815605708804f),
float2(0.7350594280274492f, -0.269209433868169f),
float2(0.19197080240419617f, 0.06181408096189249f),
float2(-0.10601974270448193f, -0.6463320711117873f),
float2(0.4372004863434413f, -0.13886830417611293f),
float2(0.06341480711549463f, -0.6732545896542302f),
float2(0.8708386834842137f, 0.06634700324382357f),
float2(-0.7704357701402003f, 0.031436512448202704f),
float2(-0.4262676550692622f, 0.05360141873398443f),
float2(-0.012975592671678667f, 0.9239278183827954f),
float2(0.6186960997027846f, 0.2113273823554739f),
float2(-0.1998351831117313f, 0.46798961638976394f),
float2(-0.47275181015790896f, -0.8724251218659445f),
float2(-0.5691014254084342f, 0.25314004504537146f),
float2(0.4820267442718965f, -0.34368455313161f),
float2(-0.9402989353105908f, 0.32478593140300155f),
float2(-0.9519722984490151f, -0.24125294732497105f),
float2(0.8439869243387448f, 0.3154371671233771f),
float2(0.4859705902452439f, -0.5058935933617091f),
float2(-0.18308057423579063f, -0.7930690893859655f),
float2(0.24475486386003298f, 0.34574521698955185f),
float2(-0.44496156253969077f, 0.3429455629049492f),
float2(0.37026360110044876f, 0.56498876001197f),
float2(-0.6078031369168682f, -0.23767588059299524f),
float2(0.4394844557000645f, 0.8668855032106868f),
float2(-0.04811443145446208f, -0.3544692137251f),
float2(-0.1958539966972181f, -0.16845941240989776f),
float2(0.49829134942336983f, 0.09422036834038958f),
float2(0.6706499956042051f, 0.5184025056579162f),
float2(0.07908889799146523f, 0.3862782752204149f),
float2(0.33679956107470643f, 0.21098174212197354f),
float2(-0.22813445709407268f, 0.7939063260720842f),
float2(0.29699366232758856f, -0.10178399661231566f),
float2(-0.12828350234404456f, 0.3228919878746458f),
float2(0.21853189805443762f, -0.42091694101353966f),
float2(0.13715633076556003f, -0.9476922781002052f),
float2(-0.7303160237875448f, 0.41894359714899976f),
float2(-0.1456671913958533f, -0.5090024658547257f),
float2(-0.41322395105612586f, 0.7511098711915953f),
float2(-0.42752234892809593f, -0.6936760377350344f),
float2(-0.6592439131847422f, -0.028259562929988283f),
float2(0.5615930454113609f, 0.38826245926060693f),
float2(-0.48683105404390387f, -0.3356227567957107f),
float2(0.35470767013725424f, 0.76487181769184f),
float2(0.27900826702637715f, -0.9561264120867408f),
float2(-0.21317827288200614f, 0.2173659306665244f),
float2(-0.7206018607087115f, 0.173442289077452f),
float2(-0.7784867263585745f, -0.44632786596693613f),
float2(-0.6132517901935309f, 0.6963798063150382f),
float2(0.592191616070967f, 0.7928210519166101f),
float2(0.6949957774322447f, -0.5502633770951173f),
float2(0.07359350278559644f, 0.04628754871506846f),
float2(-0.17417904252863078f, -0.03595387261760717f),
float2(0.037263513982623404f, 0.7593957724010233f),
float2(-0.1856748981857435f, 0.5899647003368412f),
float2(-0.08424273343295775f, 0.09858333357954842f),
float2(0.34904014733774874f, -0.8027798332035149f),
};

std::vector<std::vector<float2>> POISSON_DISK_SET = {
    POISSON_SAMPLES_4, POISSON_SAMPLES_8, POISSON_SAMPLES_16, POISSON_SAMPLES_32, POISSON_SAMPLES_64, POISSON_SAMPLES_128,
};
